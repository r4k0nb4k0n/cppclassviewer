ArrayList implementOrder = new ArrayList<Method>(); // implementOrder.get(X); == implementOrder[X];
...
int j=0; // 토큰 인덱스
int stack = 0; // 중괄호 스택 카운트.
String totalString = ""; // 최종 결합 스트링
String[] totalToken = buffer.toString().split("\\n"); // 불러왔던 파일을 라인별로 토큰 짜름.
String typeString; // 각 메소드의 타입을 저장하는 스트링


while(j<>token.length){
	
	totalString = totalString + totalToken[j] + "\n"; // 클래스 부분 받는거
	j++;
	
	if(totalToken[j].contains(firstName)){ // 메소드 구현부 만나면
	
		for(obj oo : lastClass.getMethodList())
		{
			String[] sourceToken[] = oo.getSource().split("\\n"); // 해당 메소드의 소스를 라인별로 토큰.
			if(oo.isStructor()) // if(oo.getName().contains(":"))
				totalString = totalString + oo.getName();
			else
			{
				typeString = oo.getType();
				totalString = totalString + typeString + lastClass.getName() + "::" oo.getName();
			}
			totalString = totalString + "\n{\n";
			
			for(string o : sourceToken[])
			{
				totalString = totalString + "\t" + o + "\n";
			}
			totalString = totalString + "}\n";
		}
		break;
	}
}

1. 이름 및 중괄호 포함 안하고 소스 저장 / 메소드 구현 순서 저장 -> 클래스 찾아야 함
	토큰에서 빼내온 메소드 이름을 "어느" 클래스의 메소드 리스트에서 찾아볼 것인가.
	각각의 메소드 객체에서 ClassName을 저장해놓고 getClassName() 을 이용하여 소속 클래스를 얻을 수 있다.
	int Queue::isEmpty() -> type + " " + className + "::" + (method)Name
2. 이름 및 중괄호 포함해서 소스 저장 / 메소드 구현 순서 저장 -> 클래스 찾을 필요 없음
	